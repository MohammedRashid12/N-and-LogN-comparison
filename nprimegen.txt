import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class n_primegen {
	public static void main (String[] args)
	
    {	
		long startTime = System.currentTimeMillis();
		int[] array = new int[100000];
        Random rd = new Random();
        for (int i = 0; i < array.length; i++) {
            array[i] = rd.nextInt(100); // storing random integers in an array
         }
        
		

        // use a List to store your prime numbers (its size is dynamic)
        List<Integer> primeNums = new ArrayList<Integer>();

        for (int index = 1; index < array.length; index++)
        {
            boolean isPrime = true; // initially true, and reset this every loop

            // for every number that can factor into the index number
            for (int i = 2; i < index; i++) 
                // if a number is found that factors into it, it's not prime
                if (index%i == 0) isPrime = false; 

            if (isPrime) // if this current index number is prime
            {
                System.out.print (index + " "); 
                primeNums.add(index); // add it to the List
            }
        }
        
        System.out.println();
        long endTime = System.currentTimeMillis();
        long elapsedTime = endTime - startTime;
        System.out.println("Compilation time: " + elapsedTime + " milliseconds");
    }
}
